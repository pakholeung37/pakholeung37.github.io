{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/4","result":{"data":{"site":{"siteMetadata":{"title":"银凤梨"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"记录在工作过程中使用 git 的一些问题和解决方案","fields":{"slug":"/git 最佳实践/"},"frontmatter":{"date":"December 12, 2019","title":"git 最佳实践","description":""}}},{"node":{"excerpt":"以快问快答的形式综述关于我所知道的 gitlab-ci Q: gitlab-ci 是做什么? A: gitlab-ci 是一种为自动集成/自动部署而生的工作流模式. 通过配置相应的脚本, 可以在进行相应 git 操作之后运行部署脚本. 进而形成 push…","fields":{"slug":"/gitlab-ci quick quiz/"},"frontmatter":{"date":"December 12, 2019","title":"gitlab-ci quick quiz","description":""}}},{"node":{"excerpt":"春蚕到死丝方尽，梅花香自苦寒来。金风梨的第一个版本终于发布了。 这篇文章首发于我在阿里云上部署的该项目，并不一定是项目的最终归属，你可以点击这里(已失效)查看金风梨在阿里云上的版本。 不管怎么说，作为一个 beta…","fields":{"slug":"/hello-world/"},"frontmatter":{"date":"December 12, 2019","title":"HelloWorld!","description":""}}},{"node":{"excerpt":"在学习 JavaScript 的时候出现很多难以理解的概念，例如闭包，回调，this，作用域，作用域链，执行环境等等。但是这些概念难懂，归根到底都是对 call stack 模型的把握太差。只要理解好 JavaScript…","fields":{"slug":"/javascript中的执行环境/"},"frontmatter":{"date":"December 12, 2019","title":"javascript中的执行环境","description":""}}},{"node":{"excerpt":"因为经常需要使用 nodejs 和 es6 来写 JavaScript 代码，所以有必要总结一下 js 中 import 和 require 的用法和问题。 require - exports require 是早期 js 还有没有 module…","fields":{"slug":"/js中的import和require/"},"frontmatter":{"date":"December 12, 2019","title":"js中的import和require","description":""}}},{"node":{"excerpt":"https://www.html5rocks.com/en/tutorials/speed/script-loading/","fields":{"slug":"/script tag方案详述/"},"frontmatter":{"date":"December 12, 2019","title":"script tag方案详述","description":""}}},{"node":{"excerpt":"上次谈到执行环境的时候，也谈到了 this，说道 this 值实则与函数无关，而与上下文有关。再者，this 的值在创建上下文的时候就已经确定了，无法在 runtime 中改变，例如 这篇文章将探讨创建上下文时，this 值将如何改变。 引用类型-ReferenceType…","fields":{"slug":"/this in JavaScript/"},"frontmatter":{"date":"December 12, 2019","title":"this in JavaScript","description":""}}},{"node":{"excerpt":"在网页性能优化中，为了能快的载入网页，有很多优化手段，其中一种命题，是如何降低网站的传输比特，使得在相同的带宽下，可以更快地载入需要的数据。 最小化代码 现在前端使用构建工具例如 webpack，gulp 都会使用到 minify code…","fields":{"slug":"/前端静态资源优化/"},"frontmatter":{"date":"December 12, 2019","title":"前端静态资源优化","description":""}}},{"node":{"excerpt":"本文主要是对搭建本项目的问题解决方案进行记录。 我选用的是阿里云的轻应用服务器，一次性买了一年，花了 120，大概 10 块一个月。非常超值，主要是因为阿里有学生优惠政策，建议每个学生都人手一台，真的买不了吃亏。 服务器-阿里云轻应用服务器 镜像：ubuntu-16.0…","fields":{"slug":"/建站记录/"},"frontmatter":{"date":"December 12, 2019","title":"建站记录","description":""}}},{"node":{"excerpt":"先贴两篇文章 MDN-HTTP 缓存、Google Developer-HTTP 缓存 关于缓存机制，这里只讨论两个关键字，一个是 cache-control，一个是 Etag。 其实有关缓存机制，总来的说只分两种情况，就是使用缓存前是否经过服务器确认。 cache…","fields":{"slug":"/浏览器中的缓存机制/"},"frontmatter":{"date":"December 12, 2019","title":"浏览器中的缓存机制","description":""}}}]}},"pageContext":{"limit":10,"skip":30,"numPages":5,"currentPage":4}}}