{"componentChunkName":"component---src-templates-blog-post-js","path":"/项目管理 最佳实践/","result":{"data":{"site":{"siteMetadata":{"title":"银凤梨"}},"markdownRemark":{"id":"acb4a1c6-bc29-53a9-b714-6dedc55261c2","excerpt":"包含代码规范, git workflow, 命名规范等 eslint 使用 eslint 规范你的代码. eslint-recommanded 另外实在不建议使用 airbnb-style, 处女座可以用一下, 用过的最严格的 lint 规则 google 的好像也不错. 总结来说 lint…","html":"<p>包含代码规范, git workflow, 命名规范等</p>\n<h2>eslint</h2>\n<p>使用 eslint 规范你的代码. <a href=\"https://cn.eslint.org/docs/rules/\">eslint-recommanded</a></p>\n<p>另外实在不建议使用 airbnb-style, 处女座可以用一下, 用过的最严格的 lint 规则</p>\n<p>google 的好像也不错.</p>\n<p>总结来说 lint 是项目管理必备的工具, 可以有效统一代码风格.</p>\n<p>另外建议注释掉 webpack 中 pre lint 的代码, 编译时不需要 lint 了, 有编辑器的提醒就足够了, 开启 lint 之后拖慢你的开发效率.</p>\n<h2>prettier</h2>\n<p>我使用 prettier 的规则很简单, 末尾强制分号, 缩进使用两个空格, 其他不强求. 主要是 preiiter 配合 vscode 可以 format On Save. 有效规范风格.</p>\n<h2>命名风格</h2>\n<p>命名最重要的是有意义, 其实看完 google javascript style 就差不多了, 其实和上面的 eslint 差不多, 不过 eslint 只是对一些代码风格的实现, 里面有更多关于 style 规范的东西, 可以看一下.</p>\n<p><a href=\"https://github.com/airbnb/javascript\">https://github.com/airbnb/javascript</a>\n<a href=\"https://google.github.io/styleguide/jsguide.html\">https://google.github.io/styleguide/jsguide.html</a></p>\n<h2>注释风格</h2>\n<p>大兄弟, 听说过 jsDoc 吗<a href=\"https://google.github.io/styleguide/jsguide.html\">use JSDoc</a>, JsDoc 不单是一种规范, 而且是必须严格执行的. 特别是一些公用的工具函数, 就必须强制编写 JsDoc 了. 不懂规范不要紧,</p>\n<p>使用 vsCode 插件 JsDoc 一步升天, 你值得拥有.</p>\n<p>另外一些注释风格也是必须遵守的.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// FIXME:  以FIXME开头的注释字段, 表明有潜在BUG需要被修复</span>\n\n<span class=\"token comment\">// !   表明注释很重要, 或方法被废弃</span>\n\n<span class=\"token comment\">// TODO 表明此方法需要被实现</span></code></pre></div>\n<p>不懂不要紧, Better Comments 插件欢迎你.</p>\n<p>![image (2)](assets/image (2).png)</p>\n<h2>副作用管理</h2>\n<p>时刻保持清晰自己写的代码是不是纯函数, 有没有副作用, 是不是异步的.</p>\n<p>在项目中经常一些在内部调用接口的函数没有回调或者返回 promise, 这是很不好的习惯. 函数纯不纯, 一定要在心中. 程序设计, 副作用无可避免, 但是可免则免.</p>","frontmatter":{"title":"项目管理 最佳实践","date":"May 12, 2020","description":""}}},"pageContext":{"slug":"/项目管理 最佳实践/","previous":{"fields":{"slug":"/svelte 最佳实践/"},"frontmatter":{"title":"svelte 最佳实践"}},"next":{"fields":{"slug":"/react 最佳实践/"},"frontmatter":{"title":"react 最佳实践"}}}}}